<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZylSerialPort</name>
    </assembly>
    <members>
        <member name="T:ZylSoft.Serial.SerialPort">
            <summary>
            Implements the serial port communication.
            </summary>
            <remarks>
            Events are raised on a secondary thread when data is received. 
            Because these events are raised on a secondary thread, and not the main thread, 
            attempting to modify some elements in the main thread, such as UI elements, 
            could raise a threading exception. If it is necessary to modify elements in the main Form or Control, 
            post change requests back using Invoke (or BeginInvoke to avoid deadlock), which will do the work on the proper thread. 
            </remarks>
        </member>
        <member name="F:ZylSoft.Serial.SerialPort._synchronizeVariable">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="E:ZylSoft.Serial.SerialPort.Received">
            <summary>
            Occures when data was received.
            </summary>
        </member>
        <member name="E:ZylSoft.Serial.SerialPort.Sent">
            <summary>
            Occures when data was sent.
            </summary>
        </member>
        <member name="E:ZylSoft.Serial.SerialPort.Connected">
            <summary>
            Occures after the serial port is connected.
            </summary>
        </member>
        <member name="E:ZylSoft.Serial.SerialPort.Disconnected">
            <summary>
            Occures when the serial port is disconnected.
            </summary>
        </member>
        <member name="E:ZylSoft.Serial.SerialPort.Faulted">
            <summary>
            Occures when the serial port communication is faulted.        
            </summary>
            <example>
            When you unplug an USB device which communicates on a virtual serial port.
            </example>
        </member>
        <member name="E:ZylSoft.Serial.SerialPort.LineStatusChanged">
            <summary>
            Occures when the line status of the serial port is changed.
            </summary>
        </member>
        <member name="E:ZylSoft.Serial.SerialPort.Idle">
            <summary>
            If the elapsed time from the last receive is higher than IdleInterval (milliseconds), Idle event occures.
            If IdleTinerval is 0, this event will never occure.
            It works only for AutoReceive = true.
            </summary>
        </member>
        <member name="E:ZylSoft.Serial.SerialPort.Resumed">
            <summary>
            Occures when the receiver is idle and data is received.
            It works only for AutoReceive = true.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.Port">
            <summary>
            Physical name of the serial port.
            </summary>		
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.BaudRate">
            <summary>
            Baud rate at which the communications device operates.
            </summary>        
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.CustomBaudRate">
            <summary>
            Custom baud rate value, used when BaudRate is set to Custom.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.StopBits">
            <summary>
            Number of stop bits to be used.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.DataWidth">
            <summary>
            Number of bits in the bytes transmitted and received.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.ParityBits">
            <summary>
            Parity scheme to be used.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.EnableDtrOnOpen">
            <summary>
            Enable DTR when the port is opening. The default value is true.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.EnableRtsOnOpen">
            <summary>
            Enable RTS when the port is opening. The default value is true.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.HardwareFlowControl">
            <summary>
            Hardware flow control of the serial port.
            </summary>	
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.SoftwareFlowControl">
            <summary>
            Software flow control of the serial port.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.Interval">
            <summary>
            Time interval between two receivings in milliseconds (frequency).	    
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.Delay">
            <summary>
            Time interval between two receivings in milliseconds (frequency).
            Same as Interval.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.CustomPortName">
            <summary>
            Custom port name can be used when Port is set to Custom. You can use any name, different from COMMxx.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.XonChar">
            <summary>
            Value of the XON character for both transmission and reception (ASCII: 0 - 255). The default value is (char)17.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.XoffChar">
            <summary>
            Value of the XOFF character for both transmission and reception (ASCII: 0 - 255). The default value is (char)19.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.XonLim">
            <summary>
            Minimum number of bytes allowed in the input buffer before the XON character is sent. The default value is 0, which means InputBuffer div 4.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.XoffLim">
            <summary>
            Maximum number of bytes allowed in the input buffer before the XOFF character is sent. The maximum number of bytes allowed is calculated by subtracting this value from the size, in bytes, of the input buffer. The default value is 1.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.ParityCheck">
            <summary>
            If this property is true, parity checking is performed and parity errors are reported. This should not be confused with the Parity member, which controls the type of parity used in communications. The default value is false.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.ReplaceParityErrors">
            <summary>
            Specifies whether bytes received with parity errors are replaced with the character specified by the ErrorChar member. If this member is true and the ParityCheck member is true, replacement occurs. The default value is false.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.DiscardNulls">
            <summary>
            Specifies whether null bytes are discarded. If this member is true, null bytes are discarded when received. The default value is false.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.DsrSensitivity">
            <summary>
            Specifies whether the communications driver is sensitive to the state of the DSR signal. If this member is true, the driver ignores any bytes received, unless the DSR modem input line is high. The default value is false.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.TxContinueOnXoff">
            <summary>
            Specifies whether transmission stops when the input buffer is full and the driver has transmitted the Xoff character. If this member is true, transmission continues after the Xoff character has been sent. If this member is false, transmission does not continue until the input buffer is within XonLim bytes of being empty and the driver has transmitted the Xon character. The default value is false.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.ErrorChar">
            <summary>
            Value of the character used to replace bytes received with a parity error (ASCII: 0 - 255). The default value is (char)0.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.EofChar">
            <summary>
            Value of the character used to signal the end of data (ASCII: 0 - 255). The default value is (char)26.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.EvtChar">
            <summary>
            Value of the character used to signal an event (ASCII: 0 - 255). The default value is (char)26.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.Priority">
            <summary>
            Priority of the receiver thread.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.InputBuffer">
            <summary>
            Recommended size of the device's internal input buffer, in bytes.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.OutputBuffer">
            <summary>
            Recommended size of the device's internal output buffer, in bytes.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.ReadIntervalTimeout">
            <summary>
            Maximum time allowed to elapse between the arrival of two characters on 
            the communications line, in milliseconds. During a ReadFile operation, the time 
            period begins when the first character is received. If the interval between the 
            arrival of any two characters exceeds this amount, the ReadFile operation is 
            completed and any buffered data is returned. A value of zero indicates that 
            interval time-outs are not used. A value of MAXDWORD, combined with zero values 
            for both the ReadTotalTimeoutConstant and ReadTotalTimeoutMultiplier members, 
            specifies that the read operation is to return immediately with the characters 
            that have already been received, even if no characters have been received.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.ReadTotalTimeoutMultiplier">
            <summary>
            Multiplier used to calculate the total time-out period for read operations, 
            in milliseconds. For each read operation, this value is multiplied by the 
            requested number of bytes to be read. 
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.ReadTotalTimeoutConstant">
            <summary>
            Constant used to calculate the total time-out period for read operations, 
            in milliseconds. For each read operation, this value is added to the product 
            of the ReadTotalTimeoutMultiplier member and the requested number of bytes. 
            A value of zero for both the ReadTotalTimeoutMultiplier and 
            ReadTotalTimeoutConstant members indicates that total time-outs are not used 
            for read operations.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.WriteTotalTimeoutMultiplier">
            <summary>
            Multiplier used to calculate the total time-out period for write operations, 
            in milliseconds. For each write operation, this value is multiplied by the number 
            of bytes to be written.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.WriteTotalTimeoutConstant">
            <summary>
            Constant used to calculate the total time-out period for write operations, 
            in milliseconds. For each write operation, this value is added to the product 
            of the WriteTotalTimeoutMultiplier member and the number of bytes to be written. 
            A value of zero for both the WriteTotalTimeoutMultiplier and 
            WriteTotalTimeoutConstant members indicates that total time-outs are not used 
            for write operations.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.LineStatus">
            <summary>
            Line status of the serial port.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.ConnectedTo">
            <summary>
            Returns the physical port where the component is connected to.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.IsReceiving">
            <summary>
            This property is false when the component is receiving data from the port, otherwise is false.
            Use this property to check if the component is inside a receiving process.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.IsSending">
            <summary>
            This property is true when the component is sending data to the port, otherwise is false.
            Use this property to check if the component is inside a sending process.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.NeedSynchronization">
            <summary>
            Set this property to true for thread safety. The default value is false. 
            Note: if you set it to true, you may experiment thread interblocking and lower speed.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.NewLine">
            <summary>
            Gets or sets the value used to interpret the end of a call to the SendAsciiStringLine methods.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.MaxLineLength">
            <summary>
            The maximum length of a line, when ReadStringLine or ReadStringUpToEndChars methods are used in synchronous mode (AutoReceive = false).
            If maximum length is reached, the methods return with empty string. If this value is 0, there is no maximum length. The default value is 0.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.AutoReceive">
            <summary>
            Set this property to true, if you want to receive the incoming data automatically in the Received event. 
            Otherwise you have to use ReadBuffer method to get the received data.
            The default value is true.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.MinCheckDisconnectedInterval">
            <summary>
            The minimum time interval in milliseconds, for which the port availability is checked. For time critical usage it's recommended to set it to a higher value.
            Default value is 25.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.IsFaulted">
            <summary>
            Indicates that the last connection was faulted.
            </summary>
            <example>
            When you unplug an USB device which communicates on a virtual serial port.
            </example>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.LastDataReceived">
            <summary>
            Last data received from the serial port.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.LastTimeReceived">
            <summary>
            Last date-time when data received from the serial port.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.IdleInterval">
            <summary>
            Idle time interval in milliseconds.
            If the elapsed time from the last receive is higher than IdleInterval, Idle event occures.
            If IdleInterval is 0, Idle event never occures.
            It works only for AutoReceive = true.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialPort.IsIdle">
            <summary>
            True if Idle occured, until Resumed.
            It works only for AutoReceive = true.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Constructor.
            </summary>
            <param name="container">
            The IContainer that contains the Component.
            The components in a container are tracked in a first-in, first-out list, 
            which also defines the order of the components within the container. 
            The last component added is the last component in the list.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.#ctor(ZylSoft.Serial.SerialCommPort)">
            <summary>
            Constructor.
            </summary>
            <param name="port">
            Physical name of the serial port.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.#ctor(ZylSoft.Serial.SerialCommPort,ZylSoft.Serial.SerialBaudRate)">
            <summary>
             Constructor.
            </summary>
            <param name="port">
            Physical name of the serial port.
            </param>
            <param name="baudRate">
            Baud rate at which the communications device operates.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.#ctor(ZylSoft.Serial.SerialCommPort,ZylSoft.Serial.SerialDataWidth,ZylSoft.Serial.SerialStopBits,ZylSoft.Serial.SerialParityBits)">
            <summary>
             Constructor.
            </summary>
            <param name="port">
            Physical name of the serial port.
            </param>
            <param name="dataWidth">
            Number of bits in the bytes transmitted and received.
            </param>
            <param name="stopBits">
            Number of stop bits to be used.
            </param>
            <param name="parityBits">
            Parity scheme to be used.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.#ctor(ZylSoft.Serial.SerialCommPort,ZylSoft.Serial.SerialBaudRate,ZylSoft.Serial.SerialDataWidth,ZylSoft.Serial.SerialStopBits,ZylSoft.Serial.SerialParityBits)">
            <summary>
             Constructor.
            </summary>
            <param name="port">
            Physical name of the serial port.
            </param>
            <param name="baudRate">
            Baud rate at which the communications device operates.
            </param>
            <param name="dataWidth">
            Number of bits in the bytes transmitted and received.
            </param>
            <param name="stopBits">
            Number of stop bits to be used.
            </param>
            <param name="parityBits">
            Parity scheme to be used.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.#ctor(ZylSoft.Serial.SerialCommPort,ZylSoft.Serial.SerialDataWidth,ZylSoft.Serial.SerialStopBits,ZylSoft.Serial.SerialParityBits,ZylSoft.Serial.SerialHardwareFlowControl,ZylSoft.Serial.SerialSoftwareFlowControl)">
            <summary>
             Constructor.
            </summary>
            <param name="port">
            Physical name of the serial port.
            </param>
            <param name="dataWidth">
            Number of bits in the bytes transmitted and received.
            </param>
            <param name="stopBits">
            Number of stop bits to be used.
            </param>
            <param name="parityBits">
            Parity scheme to be used.
            </param>
            <param name="hardwareFlowControl">
            Hardware flow control.
            </param>
            <param name="softwareFlowControl">
            Software flow control.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.#ctor(ZylSoft.Serial.SerialCommPort,ZylSoft.Serial.SerialBaudRate,ZylSoft.Serial.SerialDataWidth,ZylSoft.Serial.SerialStopBits,ZylSoft.Serial.SerialParityBits,ZylSoft.Serial.SerialHardwareFlowControl,ZylSoft.Serial.SerialSoftwareFlowControl)">
            <summary>
             Constructor.
            </summary>
            <param name="port">
            Physical name of the serial port.
            </param>
            <param name="baudRate">
            Baud rate at which the communications device operates.
            </param>
            <param name="dataWidth">
            Number of bits in the bytes transmitted and received.
            </param>
            <param name="stopBits">
            Number of stop bits to be used.
            </param>
            <param name="parityBits">
            Parity scheme to be used.
            </param>
            <param name="hardwareFlowControl">
            Hardware flow control.
            </param>
            <param name="softwareFlowControl">
            Software flow control.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.#ctor(ZylSoft.Serial.SerialCommPort,ZylSoft.Serial.SerialDataWidth,ZylSoft.Serial.SerialStopBits,ZylSoft.Serial.SerialParityBits,ZylSoft.Serial.SerialHardwareFlowControl,ZylSoft.Serial.SerialSoftwareFlowControl,System.Boolean,System.Boolean)">
            <summary>
             Constructor.
            </summary>
            <param name="port">
            Physical name of the serial port.
            </param>
            <param name="dataWidth">
            Number of bits in the bytes transmitted and received.
            </param>
            <param name="stopBits">
            Number of stop bits to be used.
            </param>
            <param name="parityBits">
            Parity scheme to be used.
            </param>
            <param name="hardwareFlowControl">
            Hardware flow control.
            </param>
            <param name="softwareFlowControl">
            Software flow control.
            </param>
            <param name="enableDtrOnOpen">
            Enable/disable DTR when the port is open.
            </param>
            <param name="enableRtsOnOpen">
            Enable/disable RTS when the port is open.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.#ctor(ZylSoft.Serial.SerialCommPort,ZylSoft.Serial.SerialBaudRate,ZylSoft.Serial.SerialDataWidth,ZylSoft.Serial.SerialStopBits,ZylSoft.Serial.SerialParityBits,ZylSoft.Serial.SerialHardwareFlowControl,ZylSoft.Serial.SerialSoftwareFlowControl,System.Boolean,System.Boolean)">
            <summary>
             Constructor.
            </summary>
            <param name="port">
            Physical name of the serial port.
            </param>
            <param name="baudRate">
            Baud rate at which the communications device operates.
            </param>
            <param name="dataWidth">
            Number of bits in the bytes transmitted and received.
            </param>
            <param name="stopBits">
            Number of stop bits to be used.
            </param>
            <param name="parityBits">
            Parity scheme to be used.
            </param>
            <param name="hardwareFlowControl">
            Hardware flow control.
            </param>
            <param name="softwareFlowControl">
            Software flow control.
            </param>
            <param name="enableDtrOnOpen">
            Enable/disable DTR when the port is open.
            </param>
            <param name="enableRtsOnOpen">
            Enable/disable RTS when the port is open.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.Finalize">
            <summary>
            Finalizer.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            True if managed resources should also be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.OnSent(ZylSoft.Serial.DataEventArgs)">
            <summary>
            Raises the Sent event.
            </summary>		
            <param name="e">
            A DataEventArgs that contains the event data. 
            </param>
            <remarks>
            Raising an event invokes the event handler through a delegate. 
            The OnSent method also allows derived classes to handle the event without 
            attaching a delegate. This is the preferred technique for handling the event 
            in a derived class.
            Notes to Inheritors:  When overriding OnSent in a derived class, be sure to 
            call the base class's OnSent method so that registered delegates 
            receive the event.
            </remarks>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.OnReceived(ZylSoft.Serial.DataEventArgs)">
            <summary>
            Raises the Received event.
            </summary>		
            <param name="e">
            A DataEventArgs that contains the event data. 
            </param>
            <remarks>
            Raising an event invokes the event handler through a delegate. 
            The OnReceived method also allows derived classes to handle the event without 
            attaching a delegate. This is the preferred technique for handling the event 
            in a derived class.
            Notes to Inheritors:  When overriding OnReceived in a derived class, be sure to 
            call the base class's OnReceived method so that registered delegates 
            receive the event.
            </remarks>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.OnConnected(ZylSoft.Serial.ConnectionEventArgs)">
            <summary>
            Raises the Connected event.
            </summary>		
            <param name="e">
            A ConnectionEventArgs that contains the event data. 
            </param>
            <remarks>
            Raising an event invokes the event handler through a delegate. 
            The OnConnected method also allows derived classes to handle the event without 
            attaching a delegate. This is the preferred technique for handling the event 
            in a derived class.
            Notes to Inheritors:  When overriding OnConnected in a derived class, be sure to 
            call the base class's OnConnected method so that registered delegates 
            receive the event.
            </remarks>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.OnDisconnected(ZylSoft.Serial.ConnectionEventArgs)">
            <summary>
            Raises the Disconnected event.
            </summary>		
            <param name="e">
            A ConnectionEventArgs that contains the event data. 
            </param>
            <remarks>
            Raising an event invokes the event handler through a delegate. 
            The OnDisconnected method also allows derived classes to handle the event without 
            attaching a delegate. This is the preferred technique for handling the event 
            in a derived class.
            Notes to Inheritors:  When overriding OnDisconnected in a derived class, be sure to 
            call the base class's OnDisconnected method so that registered delegates 
            receive the event.
            </remarks>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.OnFaulted(ZylSoft.Serial.ConnectionEventArgs)">
            <summary>
            Raises the Faulted event.
            </summary>		
            <param name="e">
            A ConnectionEventArgs that contains the event data. 
            </param>
            <remarks>
            Raising an event invokes the event handler through a delegate. 
            The OnFaulted method also allows derived classes to handle the event without 
            attaching a delegate. This is the preferred technique for handling the event 
            in a derived class.
            Notes to Inheritors:  When overriding OnFaulted in a derived class, be sure to 
            call the base class's OnFaulted method so that registered delegates 
            receive the event.
            </remarks>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.OnLineStatusChanged(ZylSoft.Serial.LineStatusEventArgs)">
            <summary>
            Raises the LineStatusChanged event.
            </summary>		
            <param name="e">
            A LineStatusEventArgs that contains the event data. 
            </param>
            <remarks>
            Raising an event invokes the event handler through a delegate. 
            The OnLineStatusChanged method also allows derived classes to handle the event without 
            attaching a delegate. This is the preferred technique for handling the event 
            in a derived class.
            Notes to Inheritors:  When overriding OnLineStatusChanged in a derived class, be sure to 
            call the base class's OnLineStatusChanged method so that registered delegates 
            receive the event.
            </remarks>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.OnIdle(System.EventArgs)">
            <summary>
            Raises the Idle event.
            </summary>		
            <param name="e">
            An EventArgs that contains the event data. 
            </param>
            <remarks>
            Raising an event invokes the event handler through a delegate. 
            The OnIdle method also allows derived classes to handle the event without 
            attaching a delegate. This is the preferred technique for handling the event 
            in a derived class.
            Notes to Inheritors:  When overriding OnIdle in a derived class, be sure to 
            call the base class's OnIdle method so that registered delegates 
            receive the event.
            It works only for AutoReceive = true.
            </remarks>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.OnResumed(System.EventArgs)">
            <summary>
            Raises the Resumed event.
            </summary>		
            <param name="e">
            An EventArgs that contains the event data. 
            </param>
            <remarks>
            Raising an event invokes the event handler through a delegate. 
            The OnResumed method also allows derived classes to handle the event without 
            attaching a delegate. This is the preferred technique for handling the event 
            in a derived class.
            Notes to Inheritors:  When overriding OnResumed in a derived class, be sure to 
            call the base class's OnResumed method so that registered delegates 
            receive the event.
            It works only for AutoReceive = true.
            </remarks>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.Open">
            <summary>
            Opens the serial port.
            </summary>
            <returns>
            true if succeeded.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.Close">
            <summary>
            Closes the serial port.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.IsConnected">
            <summary>
            Returns true if the serial port is connected.
            </summary>
            <returns>
            Connected = true; not connected = false;
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SetDcbState(System.IntPtr)">
            <summary>
            Set Dcb structure.
            </summary>
            <returns>
            true if succeeded.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SetBuffers(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Set input and output buffers.
            </summary>
            <param name="hComDevice">
            Com device handle.
            </param>
            <param name="inputBuffer">
            Input buffer.
            </param>
            <param name="outputBuffer">
            Output buffer.
            </param>
            <returns>
            true, if succeeded.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SetTimeouts(System.IntPtr)">
            <summary>
            Set timeouts.
            </summary>
            <param name="hComDevice">
            Com device handle.
            </param>
            <returns>
            true, if succeeded.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ClearInputBuffer">
            <summary>
            Clears input buffer.
            </summary>
            <returns>
            true, if succeeded.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ClearOutputBuffer">
            <summary>
            Clears output buffer.
            </summary>
            <returns>
            true, if succeeded.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetLineStatus(System.IntPtr)">
            <summary>
            Returns CTS, DSR, RING and DCD (or alternately RLSD or CD) signals' status.
            </summary>
            <param name="hComDevice">
            Com device handle.
            </param>
            <returns>
            The first 4 bits of the result contains CTS, DSR, RING and DCD (RLSD or CD) signals status.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetDcd">
            <summary>
            Returns the state of DCD (Data Carrier Detect, or alternately Carrier Detect abbreviated as CD, or RLSD (receive-line-signal-detect) line.
            </summary>
            <returns>
            Returns the state of DCD line.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetDcd(System.UInt64)">
            <summary>
            Returns the state of DCD (Data Carrier Detect, or alternately Carrier Detect abbreviated as CD, or RLSD (receive-line-signal-detect) line from lineStatus parameter.
            </summary>
            <param name="lineStatus">
            Line status parameter. 
            The first 4 bits of the result contains CTS, DSR, RING and DCD (RLSD or CD) signals' status.
            </param>
            <returns>
            Returns the state of DCD line.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetCts">
            <summary>
            Returns the state of CTS (clear-to-send) line.
            </summary>
            <returns>
            Returns the state of CTS line.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetCts(System.UInt64)">
            <summary>
            Returns the state of CTS (clear-to-send) line from lineStatus parameter.
            </summary>
            <param name="lineStatus">
            Line status parameter. 
            The first 4 bits of the result contains CTS, DSR, RING and DCD (RLSD or CD) signals' status.
            </param>
            <returns>
            Returns the state of CTS line.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetDsr">
            <summary>
            Returns the state of DSR (data-set-ready) line.
            </summary>
            <returns>
            Returns the state of DSR line. 
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetDsr(System.UInt64)">
            <summary>
            Returns the state of DSR (data-set-ready)  line from lineStatus parameter.
            </summary>
            <param name="lineStatus">
            Line status parameter. 
            The first 4 bits of the result contains CTS, DSR, RING and DCD (RLSD or CD) signals' status.
            </param>
            <returns>
            Returns the state of DSR line.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetRing">
            <summary>
            Returns the state of RING line.
            </summary>
            <returns>
            Returns the state of RING line.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetRing(System.UInt64)">
            <summary>
            Returns the state of RING line from lineStatus parameter.
            </summary>
            <param name="lineStatus">
            Line status parameter. 
            The first 4 bits of the result contains CTS, DSR, RING and DCD (RLSD or CD) signals' status. 
            </param>
            <returns>
            Returns the state of RING line.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SetBreak(System.Boolean)">
            <summary>
            Sets break line. 
            When value is true, suspends character transmission and places the transmission line in a break state.
            When value is false, restores character transmission and places the transmission line in a nonbreak state. 
            </summary>
            <param name="value">
            true = high; false = low
            </param>
            <returns>
            true if succeeded.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SetDtr(System.Boolean)">
            <summary>
            Sets DTR (data-terminal-ready) line.
            </summary>
            <param name="value">
            true = high; false = low
            </param>
            <returns>
            True, if succeeded.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SetRts(System.Boolean)">
            <summary>
            Sets RTS (request-to-send) line.
            </summary>
            <param name="value">
            true = high; false = low
            </param>
            <returns>
            True, if succeeded.
            </returns> 
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SetXonXoff(System.Boolean)">
            <summary>
            Sets XOnXoff state. 
            When value is true, causes transmission to act as if an XON character has been received.
            When value is false, Causes transmission to act as if an XOFF character has been received.
            </summary>
            <param name="value">
            true = high; false = low
            </param>
            <returns>
            True, if succeeded.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ThreadJob">
            <summary>
            Receiver thread's main method.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReadBuffer">
            <summary>
            Synchronously reads the received data from the serial port to a byte array.
            It works only if AutoReceive property is false.
            Otherwise returns null.
            </summary>
            <returns>
            Returns the current buffer of the serial port in a byte array and discards it.
            Returns null, if there is no data in the buffer.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReadBufferToString">
            <summary>
            Synchronously reads the received data from the serial port to string.
            It works only if AutoReceive property is false.
            Otherwise returns null.
            </summary>
            <returns>
            Returns the current buffer of the serial port in string and discards it.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReadBufferToEnumerable">
            <summary>
            Synchronously reads the received data from the serial port to a byte list.
            It works only if AutoReceive property is false.
            Otherwise returns null.
            </summary>
            <returns>
            Returns the current buffer of the serial port in string and discards it.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReadByte">
            <summary>
            Synchronously reads one byte from the serial port, if data available.
            It works only if AutoReceive property is false.
            Otherwise returns null.
            </summary>
            <returns>
            Returns one byte in a byte array from the available buffer and discards that byte.
            Returns null, if there is no data in the buffer or AutoReceive is true.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReadChar">
            <summary>
            Synchronously reads one character from the serial port.
            It works only if AutoReceive property is false.
            Otherwise returns empty string.
            </summary>
            <returns>
            Returns one character in a string from the available buffer and discards that char.
            Returns empty string, if there is no data in the buffer or AutoReceive is true.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReadStringUpToEndChars(System.String,System.Int32)">
            <summary>
            Reads the serial port up to the first occurence of endChars sequence.
            It works only if AutoReceive property is false.
            </summary>
            <param name="endChars">
            Terminator characters.
            </param>
            <param name="timeoutSeconds">
            If the timeoutSeconds interval elapses and no endChars are found, the method will return with empty string (anti-blocking protection).
            </param>
            <returns>
            Returns the contents of the input buffer up to the first occurrence of a endChars sequence, but endChars are not included in the result.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReadStringUpToEndChars(System.Collections.ObjectModel.Collection{System.String},System.String@,System.Int32)">
            <summary>
            Reads the serial port up to the first occurence of one of the endChars sequences of the endCharsList collection.
            It works only if AutoReceive property is false.
            </summary>
            <param name="endCharsList">
            Collection of terminator characters sequence.
            </param>
            <param name="partialResult">
            partialResult is empty string, if endChars sequence was found, otherwise contains the discarded data.
            </param>
            <param name="timeoutSeconds">
            If the timeoutSeconds interval elapses and no endChars are found, the method will return with empty string (anti-blocking protection).
            </param>
            <returns>
            Returns the contents of the input buffer up to the first occurrence of a endChars sequence, but endChars are not included in the result.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReadStringUpToEndChars(System.Collections.ObjectModel.Collection{System.String},System.Int32)">
            <summary>
            Reads the serial port up to the first occurence of one of the endChars sequences of the endCharsList collection.
            It works only if AutoReceive property is false.
            </summary>
            <param name="endCharsList">
            Collection of terminator characters sequence.
            </param>       
            <param name="timeoutSeconds">
            If the timeoutSeconds interval elapses and no endChars are found, the method will return with empty string (anti-blocking protection).
            </param>
            <returns>
            Returns the contents of the input buffer up to the first occurrence of a endChars sequence, but endChars are not included in the result.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReadBytes(System.Int32,System.Int32)">
            <summary>
            Reads numberOfBytes bytes from the serial port.
            It works only if AutoReceive property is false.
            </summary>
            <param name="numberOfBytes">
            The number of bytes to read.
            </param>
            <param name="timeoutSeconds">
            If the timeoutSeconds interval elapses and and cannot read enough bytes (numberOfBytes), the method will return what it read till then, less bytes.
            </param>
            <returns>
            Returns numberOfBytes bytes from the serial port and discard them.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReadLine(System.Int32)">
            <summary>
            Reads the serial port up to the first occurence of NewLine sequence.
            It works only if AutoReceive property is false.
            </summary>
            <param name="timeoutSeconds">
            If the timeoutSeconds interval elapses and no endChars are found, the method will return with empty string (anti-blocking protection).
            </param>
            <returns>
            Returns the contents of the input buffer up to the first occurrence of a NewLine, but NewLine is not included in the result.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetAvailableInputBufferSize">
            <summary>
            Returns the size of the input buffer available to be read (bytes to read).
            </summary>        
            <returns>
            Size of the available input buffer in bytes.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendByteArray(System.Byte[])">
            <summary>
            Sends a byte array to the serial port.
            </summary>
            <param name="byteArray">
            The byte array to be sent.
            </param>
            <returns>
            The count of sent bytes.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendByteArrayOnNewThread(System.Byte[])">
            <summary>
            Sends a byte array to the serial port on a separate thread.
            </summary>
            <param name="byteArray">
            The byte array to be sent.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendByteArrayWorker(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Background worker for SendByteArrayOnNewThread
            </summary>
            <param name="sender">
            Backgroundworker.
            </param>
            <param name="e">
            DoWorkEventArgs.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendUnicodeString(System.String)">
            <summary>
            Sends a UTF16 string to the serial port.
            </summary>
            <param name="text">
            String to be sent.
            </param>
            <returns>
            The count of sent bytes.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendUtf8String(System.String)">
            <summary>
            Sends a UTF8 string to the serial port.
            </summary>
            <param name="text">
            String to be sent.
            </param>
            <returns>
            The count of sent bytes.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendUtf7String(System.String)">
            <summary>
            Sends a UTF7 string to the serial port.
            </summary>
            <param name="text">
            String to be sent.
            </param>
            <returns>
            The count of sent bytes.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendUtf32String(System.String)">
            <summary>
            Sends a UTF32 string to the serial port.
            </summary>
            <param name="text">
            String to be sent.
            </param>
            <returns>
            The count of sent bytes.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendAsciiString(System.String)">
            <summary>
            Sends an ASCII string to the serial port.
            </summary>
            <param name="text">
            String to be sent.
            </param>
            <returns>
            The count of sent bytes.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendAsciiStringOnNewThread(System.String)">
            <summary>
            Sends an ASCII string to the serial port on a separate thread.
            </summary>
            <param name="text">
            String to be sent.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendAsciiStringLine(System.String)">
            <summary>
            Sends an ASCII string and the NewLine value to the serial port.
            </summary>
            <param name="text">
            String to be sent.
            </param>
            <returns>
            The count of sent bytes.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendString(System.String,System.Text.Encoding)">
            <summary>
            Sends a string with the selected encoding to the serial port.
            </summary>
            <param name="text">
            String to be sent.
            </param>
            <param name="encoding">
            Encoding used for the string.
            </param>
            <returns>
            The count of sent bytes.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendStringOnNewThread(System.String,System.Text.Encoding)">
            <summary>
            Sends a string with the selected encoding to the serial port on a separate thread.
            </summary>
            <param name="text">
            String to be sent.
            </param>
            <param name="encoding">
            Encoding used for the string.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SendByte(System.Byte)">
            <summary>
            Sends a byte to the serial port.
            </summary>
            <param name="value">
            Byte to send.
            </param>
            <returns>
            The count of sent bytes.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.Utf8ByteArrayToString(System.Byte[])">
            <summary>
            Converts UTF8 byte array to string.
            </summary>
            <param name="characters">
            Byte array to be converted.
            </param>
            <returns>
            String representation of the byte array.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.StringToUtf8ByteArray(System.String)">
            <summary>
            Converts string to UTF8 byte array.
            </summary>
            <param name="text">
            String value to be converted,
            </param>
            <returns>
            Byte array representation of the string.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.Utf7ByteArrayToString(System.Byte[])">
            <summary>
            Converts UTF7 byte array to string.
            </summary>
            <param name="characters">
            Byte array to be converted.
            </param>
            <returns>
            String representation of the byte array.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.StringToUtf7ByteArray(System.String)">
            <summary>
            Converts string to UTF7 byte array.
            </summary>
            <param name="text">
            String value to be converted,
            </param>
            <returns>
            Byte array representation of the string.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.UnicodeByteArrayToString(System.Byte[])">
            <summary>
            Converts UTF16 byte array to string.
            </summary>
            <param name="characters">
            Byte array to be converted.
            </param>
            <returns>
            String representation of the byte array.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.StringToUnicodeByteArray(System.String)">
            <summary>
            Converts string to UTF16 byte array.
            </summary>
            <param name="text">
            String value to be converted,
            </param>
            <returns>
            Byte array representation of the string.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.Utf32ByteArrayToString(System.Byte[])">
            <summary>
            Converts UTF32 byte array to string.
            </summary>
            <param name="characters">
            Byte array to be converted.
            </param>
            <returns>
            String representation of the byte array.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.StringToUtf32ByteArray(System.String)">
            <summary>
            Converts string to UTF32 byte array.
            </summary>
            <param name="text">
            String value to be converted,
            </param>
            <returns>
            Byte array representation of the string.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.AsciiByteArrayToString(System.Byte[])">
            <summary>
            Converts ASCII byte array to string.
            </summary>
            <param name="characters">
            Byte array to be converted.
            </param>
            <returns>
            String representation of the byte array.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.StringToAsciiByteArray(System.String)">
            <summary>
            Converts string to ASCII byte array.		
            </summary>
            <param name="text">
            String value to be converted,
            </param>
            <returns>
            Byte array representation of the string.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ByteArrayToDecimalString(System.Byte[])">
            <summary>
            Converts byte array to decimal string representation.
            </summary>
            <param name="data">
            Byte array to be converted.
            </param>
            <returns>
            Decimal string representation of the byte array.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ByteArrayToHexaString(System.Byte[])">
            <summary>
            Converts byte array to hexadecimal string representation.
            </summary>
            <param name="data">
            Byte array to be converted.
            </param>
            <returns>
            Hexadecimal string representation of the byte array.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.StringToSerialCommPort(System.String)">
            <summary>
            Converts string to SerialCommPort.
            </summary>
            <param name="port">
            String representation of the port.
            </param>
            <returns>
            The equivalent SerialCommPort value.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.SerialCommPortToString(ZylSoft.Serial.SerialCommPort)">
            <summary>
            Converts SerialCommPort to string.
            </summary>
            <param name="port">
            SerialCommPort value.
            </param>
            <returns>
            String representation of the port.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ProcessCommRegistryBugPriorFw4(System.String)">
            <summary>
            Corrects a bug prior .net framework 4. (2.0, 3.5).
            Sometimes for bluetooth serial ports it reads from the registry COM32r, instead of COM32 or something similar.
            </summary>
            <param name="port">
            Name of the port read from the registry.
            </param>
            <returns>
            Cuts all the non-digit characters after the "COM" string.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetExistingCommPorts">
            <summary>
            Returns the existing serial ports of the system.
            </summary>
            <returns>
            Existing serial ports of the system in an array of SerialCommPort objects.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.IsExistingCommPort(ZylSoft.Serial.SerialCommPort)">
            <summary>
            Checks if a serial port exists.
            </summary>
            <param name="port">The serial port, which is checked, if exists.</param>
            <returns>true, if the port exists.</returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.IsExistingCommPort(System.String)">
            <summary>
            Checks if a serial port exists.
            </summary>
            <param name="port">The serial port, which is checked, if exists.</param>
            <returns>true, if the port exists.</returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetExistingCommPortNames">
            <summary>
            Returns the existing serial port names of the system.
            </summary>
            <returns>
            Existing serial ports of the system in an array of strings.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetCommPortPath(System.String)">
            <summary>
            Returns the OS level name of the port. E.g.: \Device\PCISerial1
            </summary>
            <param name="port">
            The serial port.
            </param>
            <returns>OS name of the port.</returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetCommPortPath(ZylSoft.Serial.SerialCommPort)">
            <summary>
            Returns the OS level name of the port. E.g.: \Device\PCISerial1
            </summary>
            <param name="port">
            The serial port.
            </param>
            <returns>OS level name of the port.</returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetCommPortType(System.String)">
            <summary>
            Returns the type of the serial port.
            </summary>
            <param name="port">
            Serial port.
            </param>
            <returns>
            Type of the serial port.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.GetCommPortType(ZylSoft.Serial.SerialCommPort)">
            <summary>
            Returns the type of the serial port.
            </summary>
            <param name="port">
            Serial port.
            </param>
            <returns>
            Type of the serial port.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.ReplaceControlCharacters(System.String)">
            <summary>
            Replaces control characters with readable text.
            </summary>
            <param name="text">
            Raw text.
            </param>
            <returns>
            Readable text.
            </returns>        
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.Echo">
            <summary>
            Sends the last received buffer back.
            </summary>
            <returns>
            Returns the last received buffer, which was sent back to the port. If failed, returns null.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.RandomDataGenerator(System.Int32)">
            <summary>
            Generates random data in string format (chars between 0 - 255).
            </summary>
            <param name="size">
            The size of random data.
            </param>
            <returns>
            Random data.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.InitSyncCommunicationParams">
            <summary>
            Inits internal params.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.SerialPort.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>        
        </member>
        <member name="T:ZylSoft.Serial.ExtensionMethods">
            <summary>
            Extension class for SerialCommPort.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.ExtensionMethods.ToString(ZylSoft.Serial.SerialCommPort)">
            <summary>
            Converts SerialCommPort to string.
            If you use custom port name, use SerialPort.SerialCommPortToString(SerialCommPort port) instead.
            </summary>
            <param name="port">
            SerialCommPort value.
            </param>
            <returns> 
            String representation of the port.
            </returns>
        </member>
        <member name="T:ZylSoft.Serial.Logger">
            <summary>
            Logger class.
            Used for exception logging.
            ExceptionLogFile = Application.LocalUserAppDataPath + "\\zylserialnetlog.log"
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.Logger.Active">
            <summary>
            Activate exception logging.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.Logger.ExceptionLogFile">
            <summary>
            Full path of the exception log file.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.Logger.Initialize">
            <summary>
            Initalizes the log stream.
            </summary>
            <returns>
            True, if succeeded.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.Logger.WriteLogException(System.Exception)">
            <summary>
            Writes the exception in the log file.
            </summary>
            <param name="e">
            Exception.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.Logger.WriteLogException(System.Object,System.Exception)">
            <summary>
            Writes the exception in the log file.
            </summary>
            <param name="sender">
            Sender object.
            </param>
            <param name="e">
            Exception.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.Logger.WriteLogInfo(System.String)">
            <summary>
            Writes information in the log file.
            </summary>
            <param name="info">
            Information.
            </param>
        </member>
        <member name="M:ZylSoft.Serial.Logger.WriteLog(System.String)">
            <summary>
            Writes text in the log file.
            </summary>
            <param name="text">
            Log text.
            </param>
        </member>
        <member name="T:ZylSoft.Serial.SerialCommPortExtensions">
            <summary>
            Extension methods for SerialCommPort.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.SerialCommPortExtensions.StringToSerialCommPort(System.String)">
            <summary>
            Converts string to SerialCommPort.
            </summary>
            <param name="port">
            String representation of the port.
            </param>
            <returns>
            The equivalent SerialCommPort value.
            </returns>
        </member>
        <member name="M:ZylSoft.Serial.SerialCommPortExtensions.ToString(ZylSoft.Serial.SerialCommPort)">
            <summary>
            Converts SerialCommPort to string.
            If you use custom port name, use SerialPort.SerialCommPortToString(SerialCommPort port) instead.
            </summary>
            <param name="port">
            SerialCommPort value.
            </param>
            <returns> 
            String representation of the port.
            </returns>
        </member>
        <member name="T:ZylSoft.Serial.SerialCommPort">
            <summary>
            Physical serial port enumeration type.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.None">
            <summary>
            Not connected.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM1">
            <summary>
            COMM1
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM2">
            <summary>
            COMM2
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM3">
            <summary>
            COMM3
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM4">
            <summary>
            COMM4
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM5">
            <summary>
            COMM5
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM6">
            <summary>
            COMM6
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM7">
            <summary>
            COMM7
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM8">
            <summary>
            COMM8
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM9">
            <summary>
            COMM9
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM10">
            <summary>
            COMM10
            </summary>			
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM11">
            <summary>
            COMM11
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM12">
            <summary>
            COMM12
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM13">
            <summary>
            COMM13
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM14">
            <summary>
            COMM14
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM15">
            <summary>
            COMM15
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM16">
            <summary>
            COMM16
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM17">
            <summary>
            COMM17
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM18">
            <summary>
            COMM18
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM19">
            <summary>
            COMM19
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM20">
            <summary>
            COMM20
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM21">
            <summary>
            COMM21
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM22">
            <summary>
            COMM22
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM23">
            <summary>
            COMM23
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM24">
            <summary>
            COMM24
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM25">
            <summary>
            COMM25
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM26">
            <summary>
            COMM26
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM27">
            <summary>
            COMM27
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM28">
            <summary>
            COMM28
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM29">
            <summary>
            COMM29
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM30">
            <summary>
            COMM30
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM31">
            <summary>
            COMM31
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM32">
            <summary>
            COMM32
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM33">
            <summary>
            COMM33
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM34">
            <summary>
            COMM34
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM35">
            <summary>
            COMM35
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM36">
            <summary>
            COMM36
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM37">
            <summary>
            COMM37
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM38">
            <summary>
            COMM38
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM39">
            <summary>
            COMM39
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM40">
            <summary>
            COMM40
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM41">
            <summary>
            COMM41
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM42">
            <summary>
            COMM42
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM43">
            <summary>
            COMM43
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM44">
            <summary>
            COMM44
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM45">
            <summary>
            COMM45
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM46">
            <summary>
            COMM46
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM47">
            <summary>
            COMM47
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM48">
            <summary>
            COMM48
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM49">
            <summary>
            COMM49
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM50">
            <summary>
            COMM50
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM51">
            <summary>
            COMM51
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM52">
            <summary>
            COMM52
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM53">
            <summary>
            COMM53
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM54">
            <summary>
            COMM54
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM55">
            <summary>
            COMM55
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM56">
            <summary>
            COMM56
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM57">
            <summary>
            COMM57
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM58">
            <summary>
            COMM58
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM59">
            <summary>
            COMM59
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM60">
            <summary>
            COMM60
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM61">
            <summary>
            COMM61
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM62">
            <summary>
            COMM62
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM63">
            <summary>
            COMM63
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM64">
            <summary>
            COMM64
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM65">
            <summary>
            COMM65
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM66">
            <summary>
            COMM66
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM67">
            <summary>
            COMM67
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM68">
            <summary>
            COMM68
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM69">
            <summary>
            COMM69
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM70">
            <summary>
            COMM70
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM71">
            <summary>
            COMM71
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM72">
            <summary>
            COMM72
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM73">
            <summary>
            COMM73
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM74">
            <summary>
            COMM74
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM75">
            <summary>
            COMM75
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM76">
            <summary>
            COMM76
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM77">
            <summary>
            COMM77
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM78">
            <summary>
            COMM78
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM79">
            <summary>
            COMM79
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM80">
            <summary>
            COMM80
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM81">
            <summary>
            COMM81
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM82">
            <summary>
            COMM82
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM83">
            <summary>
            COMM83
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM84">
            <summary>
            COMM84
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM85">
            <summary>
            COMM85
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM86">
            <summary>
            COMM86
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM87">
            <summary>
            COMM87
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM88">
            <summary>
            COMM88
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM89">
            <summary>
            COMM89
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM90">
            <summary>
            COMM90
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM91">
            <summary>
            COMM91
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM92">
            <summary>
            COMM92
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM93">
            <summary>
            COMM93
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM94">
            <summary>
            COMM94
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM95">
            <summary>
            COMM95
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM96">
            <summary>
            COMM96
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM97">
            <summary>
            COMM97
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM98">
            <summary>
            COMM98
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM99">
            <summary>
            COMM99
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM100">
            <summary>
            COMM100
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM101">
            <summary>
            COMM101
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM102">
            <summary>
            COMM102
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM103">
            <summary>
            COMM103
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM104">
            <summary>
            COMM104
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM105">
            <summary>
            COMM105
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM106">
            <summary>
            COMM106
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM107">
            <summary>
            COMM107
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM108">
            <summary>
            COMM108
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM109">
            <summary>
            COMM109
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM110">
            <summary>
            COMM110
            </summary>			
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM111">
            <summary>
            COMM111
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM112">
            <summary>
            COMM112
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM113">
            <summary>
            COMM113
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM114">
            <summary>
            COMM114
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM115">
            <summary>
            COMM115
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM116">
            <summary>
            COMM116
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM117">
            <summary>
            COMM117
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM118">
            <summary>
            COMM118
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM119">
            <summary>
            COMM119
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM120">
            <summary>
            COMM120
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM121">
            <summary>
            COMM121
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM122">
            <summary>
            COMM122
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM123">
            <summary>
            COMM123
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM124">
            <summary>
            COMM124
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM125">
            <summary>
            COMM125
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM126">
            <summary>
            COMM126
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM127">
            <summary>
            COMM127
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM128">
            <summary>
            COMM128
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM129">
            <summary>
            COMM129
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM130">
            <summary>
            COMM130
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM131">
            <summary>
            COMM131
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM132">
            <summary>
            COMM132
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM133">
            <summary>
            COMM133
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM134">
            <summary>
            COMM134
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM135">
            <summary>
            COMM135
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM136">
            <summary>
            COMM136
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM137">
            <summary>
            COMM137
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM138">
            <summary>
            COMM138
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM139">
            <summary>
            COMM139
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM140">
            <summary>
            COMM140
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM141">
            <summary>
            COMM141
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM142">
            <summary>
            COMM142
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM143">
            <summary>
            COMM143
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM144">
            <summary>
            COMM144
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM145">
            <summary>
            COMM145
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM146">
            <summary>
            COMM146
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM147">
            <summary>
            COMM147
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM148">
            <summary>
            COMM148
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM149">
            <summary>
            COMM149
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM150">
            <summary>
            COMM150
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM151">
            <summary>
            COMM151
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM152">
            <summary>
            COMM152
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM153">
            <summary>
            COMM153
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM154">
            <summary>
            COMM154
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM155">
            <summary>
            COMM155
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM156">
            <summary>
            COMM156
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM157">
            <summary>
            COMM157
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM158">
            <summary>
            COMM158
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM159">
            <summary>
            COMM159
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM160">
            <summary>
            COMM160
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM161">
            <summary>
            COMM161
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM162">
            <summary>
            COMM162
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM163">
            <summary>
            COMM163
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM164">
            <summary>
            COMM164
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM165">
            <summary>
            COMM165
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM166">
            <summary>
            COMM166
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM167">
            <summary>
            COMM167
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM168">
            <summary>
            COMM168
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM169">
            <summary>
            COMM169
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM170">
            <summary>
            COMM170
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM171">
            <summary>
            COMM171
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM172">
            <summary>
            COMM172
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM173">
            <summary>
            COMM173
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM174">
            <summary>
            COMM174
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM175">
            <summary>
            COMM175
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM176">
            <summary>
            COMM176
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM177">
            <summary>
            COMM177
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM178">
            <summary>
            COMM178
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM179">
            <summary>
            COMM179
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM180">
            <summary>
            COMM180
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM181">
            <summary>
            COMM181
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM182">
            <summary>
            COMM182
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM183">
            <summary>
            COMM183
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM184">
            <summary>
            COMM184
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM185">
            <summary>
            COMM185
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM186">
            <summary>
            COMM186
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM187">
            <summary>
            COMM187
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM188">
            <summary>
            COMM188
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM189">
            <summary>
            COMM189
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM190">
            <summary>
            COMM190
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM191">
            <summary>
            COMM191
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM192">
            <summary>
            COMM192
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM193">
            <summary>
            COMM193
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM194">
            <summary>
            COMM194
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM195">
            <summary>
            COMM195
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM196">
            <summary>
            COMM196
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM197">
            <summary>
            COMM197
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM198">
            <summary>
            COMM198
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM199">
            <summary>
            COMM199
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM200">
            <summary>
            COMM200
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM201">
            <summary>
            COMM201
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM202">
            <summary>
            COMM202
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM203">
            <summary>
            COMM203
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM204">
            <summary>
            COMM204
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM205">
            <summary>
            COMM205
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM206">
            <summary>
            COMM206
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM207">
            <summary>
            COMM207
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM208">
            <summary>
            COMM208
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM209">
            <summary>
            COMM209
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM210">
            <summary>
            COMM210
            </summary>			
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM211">
            <summary>
            COMM211
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM212">
            <summary>
            COMM212
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM213">
            <summary>
            COMM213
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM214">
            <summary>
            COMM214
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM215">
            <summary>
            COMM215
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM216">
            <summary>
            COMM216
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM217">
            <summary>
            COMM217
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM218">
            <summary>
            COMM218
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM219">
            <summary>
            COMM219
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM220">
            <summary>
            COMM220
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM221">
            <summary>
            COMM221
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM222">
            <summary>
            COMM222
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM223">
            <summary>
            COMM223
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM224">
            <summary>
            COMM224
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM225">
            <summary>
            COMM225
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM226">
            <summary>
            COMM226
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM227">
            <summary>
            COMM227
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM228">
            <summary>
            COMM228
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM229">
            <summary>
            COMM229
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM230">
            <summary>
            COMM230
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM231">
            <summary>
            COMM231
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM232">
            <summary>
            COMM232
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM233">
            <summary>
            COMM233
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM234">
            <summary>
            COMM234
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM235">
            <summary>
            COMM235
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM236">
            <summary>
            COMM236
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM237">
            <summary>
            COMM237
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM238">
            <summary>
            COMM238
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM239">
            <summary>
            COMM239
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM240">
            <summary>
            COMM240
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM241">
            <summary>
            COMM241
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM242">
            <summary>
            COMM242
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM243">
            <summary>
            COMM243
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM244">
            <summary>
            COMM244
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM245">
            <summary>
            COMM245
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM246">
            <summary>
            COMM246
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM247">
            <summary>
            COMM247
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM248">
            <summary>
            COMM248
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM249">
            <summary>
            COMM249
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM250">
            <summary>
            COMM250
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM251">
            <summary>
            COMM251
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM252">
            <summary>
            COMM252
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM253">
            <summary>
            COMM253
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM254">
            <summary>
            COMM254
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.COM255">
            <summary>
            COMM255
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPort.Custom">
            <summary>
            Custom port name
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.SerialBaudRate">
            <summary>
            Baud rate enumeration type.
            It's the measure of how fast data is moving between instruments that use serial communication.
            RS-232 uses only two voltage states, called MARK and SPACE. 
            In such a two-state coding scheme, the baud rate is identical to the maximum number of bits of information, including "control" bits, that are transmitted per second.
            </summary>		
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br000075">
            <summary>
            75 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br000110">
            <summary>
            110 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br000134">
            <summary>
            134 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br000150">
            <summary>
            150 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br000300">
            <summary>
            300 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br000600">
            <summary>
            600 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br001200">
            <summary>
            1200 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br001800">
            <summary>
            1800 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br002400">
            <summary>
            2400 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br004800">
            <summary>
            4800 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br007200">
            <summary>
            7200 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br009600">
            <summary>
            9600 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br014400">
            <summary>
            14400 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br019200">
            <summary>
            19200 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br038400">
            <summary>
            38400 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br057600">
            <summary>
            57600 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br115200">
            <summary>
            115200 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br128000">
            <summary>
            128000 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br230400">
            <summary>
            230400 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br256000">
            <summary>
            256000 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br460800">
            <summary>
            460800 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Br921600">
            <summary>
            921600 bps.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialBaudRate.Custom">
            <summary>
            CustomBaudRate will be used.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.SerialCommPortType">
            <summary>
            Serial port type enumeration.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPortType.Serial">
            <summary>
            Serial.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPortType.Usb">
            <summary>
            USB.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPortType.Bluetooth">
            <summary>
            Bluetooth.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPortType.Virtual">
            <summary>
            Virtual serial port.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialCommPortType.Unknown">
            <summary>
            Unknown type.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.SerialStopBits">
            <summary>
            Stop bits enumeration type.
            The last part of a character frame consists of 1, 1.5, or 2 stop bits. 
            These bits are always represented by a negative voltage. 
            If no further characters are transmitted, the line stays in the negative (MARK) condition. 
            The transmission of the next character frame, if any, is heralded by a start bit of positive (SPACE) voltage.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialStopBits.Sb1Bit">
            <summary>
            1 stop bit.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialStopBits.Sb1_5Bits">
            <summary>
            1.5 stop bits.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialStopBits.Sb2Bits">
            <summary>
            2 stop bits.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.SerialDataWidth">
            <summary>
            Data bits enumeration type (ByteSize).
            Data bits are transmitted "upside down and backwards." 
            Inverted logic is used and the order of transmission is from least 
            significant bit (LSB) to most significant bit (MSB). 
            To interpret the data bits in a character frame, you must read from right to left, 
            and read 1 for negative voltage and 0 for positive voltage.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialDataWidth.Dw5Bits">
            <summary>
            5 bits.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialDataWidth.Dw6Bits">
            <summary>
            6 bits. 
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialDataWidth.Dw7Bits">
            <summary>
            7 bits. 
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialDataWidth.Dw8Bits">
            <summary>
            8 bits. 
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.SerialParityBits">
            <summary>
            Parity bits enumeration type.
            An optional parity bit follows the data bits in the character frame. 
            The parity bit, if present, also follows inverted logic: read 1 for negative voltage and 0 for positive voltage.
            This bit is included as a simple means of error checking. 
            The idea is this: you specify ahead of time whether the parity of the 
            transmission is to be even or odd. Suppose the parity is chosen to be odd. 
            The transmitter will then set the parity bit in such a way as to make an odd number of 1's among the data bits and the parity bit.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialParityBits.None">
            <summary>
            No parity.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialParityBits.Odd">
            <summary>
            Odd.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialParityBits.Even">
            <summary>
            Even.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialParityBits.Mark">
            <summary>
            Mark.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialParityBits.Space">
            <summary>
            Space.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.SerialHardwareFlowControl">
            <summary>
            Hardware flow control enumeration type.
            </summary>
            <remarks>
            Possible values: None, None + RTS always on, RTS/CTS.
            </remarks>
        </member>
        <member name="F:ZylSoft.Serial.SerialHardwareFlowControl.None">
            <summary>
            No hardware handshake.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialHardwareFlowControl.DtrDsr">
            <summary>
            DTR flow control.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialHardwareFlowControl.RtsCts">
            <summary>
            RTS flow control.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.SerialSoftwareFlowControl">
            <summary>
            Software flow control enumeration type.
            </summary>
            <remarks>
            Possible values: None, XON/XOFF.
            </remarks>
        </member>
        <member name="F:ZylSoft.Serial.SerialSoftwareFlowControl.None">
            <summary>
            No software handshake.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.SerialSoftwareFlowControl.XonXoff">
            <summary>
            XON/XOFF.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.ConnectionEventArgs">
            <summary>
            Provides data for the Connected and Disconnected events.	
            </summary>
            <remarks>
            The Connected event occurs when a connection was established. 
            The Disconnected event occurs when the connection is closed. 
            A ConnectionEventArgs specifies the related physical serial port.
            </remarks>
        </member>
        <member name="P:ZylSoft.Serial.ConnectionEventArgs.Port">
            <summary>
            Physical serial port.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.ConnectionEventArgs.#ctor(ZylSoft.Serial.SerialCommPort)">
            <summary>
            Constructor.
            </summary>
            <param name="port">
            Physical serial port.
            </param>
        </member>
        <member name="T:ZylSoft.Serial.DataEventArgs">
            <summary>
            Provides data for the Sent and Received events.
            </summary>
            <remarks>
            The Received event occurs when data was received. 
            The Sent event occurs when data was sent. 
            A DataEventArgs specifies the sent or received data.
            </remarks>
        </member>
        <member name="P:ZylSoft.Serial.DataEventArgs.Buffer">
            <summary>
            Sent or received data.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.DataEventArgs.#ctor(System.Byte[])">
            <summary>
            Constructor.
            </summary>
            <param name="bufferArray">
            Sent or received data.
            </param>
        </member>
        <member name="T:ZylSoft.Serial.LineStatusEventArgs">
            <summary>
            Provides data for the LineStatusChanged events.
            </summary>
            <remarks>
            The LineStatusChanged event occurs when the line status is changed. 
            A LineStatusEventArgs specifies the new line status of the serial port.
            </remarks>
        </member>
        <member name="P:ZylSoft.Serial.LineStatusEventArgs.LineStatus">
            <summary>
            Line status of the serial port.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.LineStatusEventArgs.#ctor(System.UInt64)">
            <summary>
            Line status of the serial port.
            </summary>
            <param name="lineStatus">
            New line status.
            </param>
        </member>
        <member name="T:ZylSoft.Serial.NativeMethods.IoAccessRights">
            <summary>
            IO access constants.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.NativeMethods.IoCreationDisposition">
            <summary>
            IO creation disposition constants.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.NativeMethods.DcbFlags">
            <summary>
            DCB Flags.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.NativeMethods.LineStatusMasks">
            <summary>
            Line status mask constants.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.NativeMethods.PurgeFlags">
            <summary>
            Purge function flags.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.PurgeFlags.PurgeTxAbort">
            <summary>
            Kill the pending/current writes to the comm port.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.PurgeFlags.PurgeRxAbort">
            <summary>
            Kill the pending/current reads to the comm port.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.PurgeFlags.PurgeTxClear">
            <summary>
            Kill the transmit queue if there.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.PurgeFlags.PurgeRxClear">
            <summary>
            Kill the typeahead buffer if there.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.NativeMethods.EscapeFlags">
            <summary>
            Escape function constants.
            </summary>    
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.EscapeFlags.SetXoff">
            <summary>
            Simulate XOFF received
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.EscapeFlags.SetXon">
            <summary>
            Simulate XON received
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.EscapeFlags.SetRts">
            <summary>
            Set RTS high
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.EscapeFlags.ClrRts">
            <summary>
            Set RTS low
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.EscapeFlags.SetDtr">
            <summary>
            Set DTR high
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.EscapeFlags.ClrDtr">
            <summary>
            Set DTR low
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.EscapeFlags.SetBreak">
            <summary>
            Set the device break line.
            </summary>
        </member>
        <member name="F:ZylSoft.Serial.NativeMethods.EscapeFlags.ClrBreak">
            <summary>
            Clear the device break line.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.NativeMethods.Dcb">
            <summary>
            DCB struct.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.NativeMethods.CommTimeouts">
            <summary>
            Timeout struct.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.NativeMethods.Overlapped">
            <summary>
            Overlapped struct.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.NativeMethods.ComStat">
            <summary>
            ComStat struct.
            </summary>
        </member>
        <member name="T:ZylSoft.Serial.SerialException">
            <summary>
            Implements serial exception class.
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialException.MessageInvalidDataWidth">
            <summary>
            Exception: Invalid data-width and stop-bits combination
            </summary>
        </member>
        <member name="P:ZylSoft.Serial.SerialException.MessagePortNotOpen">
            <summary>
            Exception: Port is not open.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.SerialException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:ZylSoft.Serial.SerialException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception. 
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. 
            </param>
        </member>
        <member name="M:ZylSoft.Serial.SerialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor.
            </summary>
            <param name="info">
            The SerializationInfo that holds the serialized object data about the exception being thrown.
            </param>
            <param name="context">
            The StreamingContext that contains contextual information about the source or destination. 
            </param>
        </member>
    </members>
</doc>
